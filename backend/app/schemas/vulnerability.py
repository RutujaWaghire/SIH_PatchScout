"""
Pydantic schemas for vulnerability operations.
"""
from datetime import datetime
from typing import List, Optional
from pydantic import BaseModel, Field


class VulnerabilityResponseSchema(BaseModel):
    """Schema for vulnerability response."""
    id: int
    scan_id: int
    cve_id: Optional[str]
    vulnerability_id: str
    title: str
    description: str
    severity: str
    cvss_score: Optional[float]
    affected_component: Optional[str]
    affected_version: Optional[str]
    port: Optional[int]
    service: Optional[str]
    discovered_by: str
    discovered_at: datetime
    exploit_status: str
    solution: Optional[str]
    references: List[str]
    tags: List[str]
    mitre_attack_ids: List[str]
    false_positive: bool
    verified: bool
    created_at: datetime

    class Config:
        from_attributes = True


class VulnerabilityListResponseSchema(BaseModel):
    """Schema for list of vulnerabilities."""
    vulnerabilities: List[VulnerabilityResponseSchema]
    total: int
    page: int
    page_size: int


class VulnerabilityFilterSchema(BaseModel):
    """Schema for filtering vulnerabilities."""
    severity: Optional[List[str]] = None
    cve_id: Optional[str] = None
    discovered_by: Optional[str] = None
    exploit_status: Optional[str] = None
    false_positive: Optional[bool] = None
    verified: Optional[bool] = None
